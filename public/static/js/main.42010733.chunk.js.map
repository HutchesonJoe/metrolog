{"version":3,"sources":["components/Banner.js","components/Errors.js","components/homepage/Login.js","components/BuildingsInfo.js","components/homepage/Register.js","components/ComplaintTypesInfo.js","components/TenantComplaintsContext.js","components/UserContext.js","components/EditComplaint.js","components/Cards/ComplaintCard.js","components/map/MapContainer.js","components/ComplaintsByBuilding.js","components/Cards/TenantCard.js","components/Cards/SuperCard.js","components/navbars/TenantNavbar.js","components/super/SuperComplaintsByBuilding.js","components/super/AllSuperComplaints.js","components/super/ComplaintsByDate.js","components/navbars/SuperNavbar.js","components/tenant/BuildingComplaints.js","components/tenant/MyComplaints.js","components/tenant/FileComplaint.js","components/homepage/Home.js","components/App.js","reportWebVitals.js","index.js"],"names":["Banner","to","className","Errors","errorList","errors","map","err","id","Login","setUser","useState","username","setUsername","password","setPassword","isSuper","setIsSuper","setErrors","navigate","useNavigate","onSubmit","e","preventDefault","user","console","log","fetch","method","headers","body","JSON","stringify","then","r","ok","json","replace","onChange","value","type","target","BuildingsContext","createContext","BuildingsProvider","children","buildings","setBuildings","useEffect","data","Provider","Register","isTenant","setIsTenant","formOn","setFormOn","tenantId","setTenantId","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","unit","setUnit","additionalTenants","sestAdditionalTenants","building","setBuilding","passwordConfirmation","setPasswordConfirmation","buildingList","useContext","address","targetRoute","first_name","last_name","phone_number","additional_tenants","currently_occupying","password_confirmation","apartment","building_id","unit_number","tenant_id","setApartment","ComplaintTypesContext","ComplaintTypesProvider","complaints","setComplaints","TenantComplaintContext","TenantComplaintProvider","UserContext","UserProvider","EditComplaint","updatedNote","complaintId","complaint","setComplaint","notes","setNotes","complaint_type","setType","complaint_id","typeId","setTypeId","complaintTypes","super_notes","tenant_notes","complaintTypeOptions","complaintType","find","parseInt","placeholder","ComplaintCard","tenantComplaint","createdAt","Date","created_at","updatedAt","updated_at","now","timeLapsed","Math","floor","abs","editWindowOn","setEditWindowOn","compStatus","setCompStatus","resolved","c","undefined","toString","onClick","window","confirm","filteredComplaints","filter","comp","MapContainer","selected","setSelected","locations","setLocations","buildingStats","location","lng","longitude","lat","latitude","name","unitCount","number_of_units","complaintCount","tenant_complaints","length","push","googleMapsApiKey","mapContainerStyle","height","width","zoom","center","position","clickable","onCloseClick","ComplaintsByBuilding","tenantComplaints","setTenantComplaints","setComplaintTypes","noComplaints","setNoComplaints","b","TenantCard","SuperCard","isPlural","TenantNavbar","SuperComplaintsByBuilding","buildingOptions","superBuildings","complaintList","selectedBuilding","AllSuperComplaints","types","openOnly","setOpenOnly","allSuperComplaints","setAllSuperComplaints","open","superComplaints","flat","complaintTypesOptions","ComplaintsByDate","SuperNavbar","BuildingComplaints","tenantBuildingComplaints","MyComplaints","myComplaintList","myComplaints","setMyComplaints","FileComplaint","setComplaintType","complaintTypeId","setComplaintTypeId","tenantNotes","setTenantNotes","submitOn","setSubmitOn","compArray","split","Home","exact","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42010733.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom'\n\nfunction Banner(){\n  return (\n    <div>\n      <NavLink to=\"/\">\n      <h1 className=\"App-header\">\n            METROLog\n          </h1>\n      </NavLink>\n          \n\n    </div>\n   \n\n  )\n}\n\nexport default Banner;","function Errors({errors}){\n  \n  let errorList\n  \n  if(errors){\n    errorList = errors.map( err => <li key={err}>{err}</li>)\n  } else {\n    errorList = \"\"\n  }\n  return(\n    <div id=\"errors\">\n      <ul>{errorList}</ul>\n    </div>\n    \n  )\n}\n\nexport default Errors","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Errors from \"../Errors\";\n\nfunction Login({setUser}){\n  const[username, setUsername] = useState(\"\")\n  const[password, setPassword] = useState(\"\");\n  const[isSuper, setIsSuper] = useState(false)\n  const[errors, setErrors] = useState([]);\n\n  const navigate = useNavigate()\n\n  function handleLogin(e){\n    e.preventDefault()\n    const user = {username, password, isSuper}\n    console.log(user)\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then((r)=> {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n        navigate(\"/home\", { replace: true })\n      } else {\n        r.json().then((err) => {\n          setErrors(err.errors);\n          setUser(null);\n        })\n      }\n    })\n   \n  }\n\n  return(\n    <div id=\"login\">\n\n      <form onSubmit={handleLogin}>\n      <div>\n          <label>I am a current: </label>\n          <select onChange={()=>setIsSuper(!isSuper)}>\n            <option value={false}>Tenant</option>\n            <option value={true}>Superintendent</option>\n          </select>\n        </div>\n        <div>\n          <label>Username: </label>\n          <input type=\"text\" onChange={(e)=>setUsername(e.target.value)}></input>\n        </div>\n        <div>\n          <label>Password: </label>\n          <input type=\"password\" onChange={(e)=>setPassword(e.target.value)}></input>\n        </div>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n        <div>\n          <Errors errors = {errors}/>\n        </div>\n      </form>\n     \n    </div>\n  )\n}\n\nexport default Login;","import { useState, createContext, useEffect } from \"react\";\n\nconst BuildingsContext = createContext()\n\nfunction BuildingsProvider({children}){\n  const [buildings, setBuildings] = useState([])\n\n  useEffect(()=>{\n    fetch(\"/buildings\")\n    .then(r=>r.json())\n    .then(data=>setBuildings(data))\n\n  },[])\n  \n  return <BuildingsContext.Provider value={buildings}>{children}</BuildingsContext.Provider>\n}\n\nexport  { BuildingsContext, BuildingsProvider }","import { useState, useContext } from 'react';\nimport { BuildingsContext } from \"../BuildingsInfo\"\nimport Errors from '../Errors';\n\nfunction Register(){\n  const[isTenant, setIsTenant] = useState(true)\n  const[formOn, setFormOn] = useState(false)\n  const[errors, setErrors] = useState()\n  const[tenantId, setTenantId] = useState()\n  const[firstName, setFirstName] = useState(\"\")\n  const[lastName, setLastName] = useState(\"\")\n  const[email, setEmail] = useState(\"\")\n  const[phoneNumber, setPhoneNumber] = useState(\"\")\n  const[unit, setUnit] = useState(\"\")\n  const[additionalTenants, sestAdditionalTenants] = useState(\"\")\n  const[building, setBuilding] = useState(1)\n  const[username, setUsername] = useState(\"\")\n  const[password, setPassword] = useState(\"\")\n  const[passwordConfirmation, setPasswordConfirmation] = useState(\"\")\n\n  const buildings = useContext(BuildingsContext)\n  \n\n  const buildingList = buildings.map((building)=><option key={building.id} value={building.id}>{building.address}</option>)\n\n  function handleSelectUserType(e){\n    setErrors([])\n    if(e.target.value===\"tenant\"){\n      setFormOn(true)\n      setIsTenant(true)\n    }else if(e.target.value===\"super\"){\n      setFormOn(true)\n      setIsTenant(false)\n    } else if(e.target.value===\"select\"){\n      setFormOn(false)\n    }\n  }\n\n  function setApartment(){\n    const apartment = {\n      building_id: building,\n      unit_number: unit,\n      tenant_id: tenantId\n    }\n\n    fetch(\"/apartments\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n      },\n      body: JSON.stringify(apartment)\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then(()=>setErrors([\"Success! Log in above.\"]))\n      }\n      if (!r.ok) {\n        r.json().then((err) => setErrors(err.errors))\n      }\n      })\n  }\n  \n  function handleSubmit(e){\n    e.preventDefault()\n    \n\n    let targetRoute\n    let user\n\n    if(isTenant){\n      user = {\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        phone_number: phoneNumber,\n        additional_tenants: additionalTenants,\n        currently_occupying: true,\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n      }\n      targetRoute = \"/tenants\"\n    } else {\n      user = {\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        phone_number: phoneNumber,\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n      }\n      targetRoute = \"/supers\"\n    }\n    \n    fetch(targetRoute,{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n      },\n      body: JSON.stringify(user)\n    })\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((data)=>{\n          if(isTenant){\n            setTenantId(data.id)\n          }\n          setFormOn(false)\n        });\n        setErrors([\"Success! Log in above.\"]);\n        if(isTenant){setApartment()}\n        // navigate(\"/login\", { replace: true })\n      }\n      if (!r.ok) {\n        r.json().then((err) => setErrors(err.errors))\n      }\n    });\n    \n  }\n    \n  return(\n    \n    <div id=\"register\">\n      <div>\n      <label>I am a new: </label>\n      <select onChange={handleSelectUserType}>\n        <option value={\"select\"}>Select:</option>\n        <option value={\"tenant\"}>Tenant</option>\n        <option value={\"super\"}>Superintendent</option>\n      </select>\n      </div>\n            \n       <div>\n        {formOn ? \n          <form onSubmit={handleSubmit}>\n            <label>Select building:</label>\n            <select onChange={(e)=>setBuilding(e.target.value)}>\n              {buildingList}\n            </select>\n            <div>\n              <label> First Name: </label>\n              <input type=\"text\" onChange={(e)=>setFirstName(e.target.value)}></input>\n            </div>\n            <div>\n              <label> Last Name: </label>\n              <input type=\"text\" onChange={(e)=>setLastName(e.target.value)}></input>\n            </div>\n            <div>\n              <label> Email: </label>\n              <input type=\"text\" onChange={(e)=>setEmail(e.target.value)}></input>\n            </div>\n            <div>\n              <label> Phone: </label>\n              <input type=\"text\" onChange={(e)=>setPhoneNumber(e.target.value)}></input>\n            </div>\n            <div>\n              <label> User Name: </label>\n              <input type=\"text\" onChange={(e)=>setUsername(e.target.value)}></input>\n            </div>\n            <div>\n              <label> Password: </label>\n              <input type=\"password\" onChange={(e)=>setPassword(e.target.value)}></input>\n            </div>\n            <div>\n              <label> Password Confirmation: </label>\n              <input type=\"password\" onChange={(e)=>setPasswordConfirmation(e.target.value)}></input>\n            </div>\n          {isTenant ? \n            <div>\n              <div>\n                <label>Unit Number:</label>\n                <input type=\"text\" onChange={(e)=>setUnit(e.target.value)}></input>\n              </div>\n              <div>\n                <label>Additional Tenant (full name; if multiple, separate with commas):</label>\n                <input type=\"text\" onChange={(e)=>sestAdditionalTenants(e.target.value)}></input>\n              </div>\n              \n\n            </div>\n           \n            : \n            \"\"}\n            <button type=\"submit\">Submit</button>\n          </form>\n        : \"\"}\n       \n        </div>\n        <div>\n          <Errors errors = {errors}/>\n        </div>\n    </div>\n  )\n}\n\nexport default Register; ","import { useState, createContext, useEffect } from \"react\";\n\nconst ComplaintTypesContext = createContext()\n\nfunction ComplaintTypesProvider({children}){\n  const [complaints, setComplaints] = useState([])\n  \n  useEffect(()=>{\n    fetch(\"/complaints\")\n    .then(r=>r.json())\n    .then(data=>setComplaints(data))\n\n  },[])\n  \n  return <ComplaintTypesContext.Provider value={complaints}>{children}</ComplaintTypesContext.Provider>\n}\n\nexport  { ComplaintTypesContext, ComplaintTypesProvider }","import { useState, createContext, useEffect } from \"react\";\n\nconst TenantComplaintContext = createContext()\n\nfunction TenantComplaintProvider({children}){\n  const [complaints, setComplaints] = useState([])\n  \n  return <TenantComplaintContext.Provider value={[complaints, setComplaints]}>{children}</TenantComplaintContext.Provider>\n}\n\nexport  { TenantComplaintContext, TenantComplaintProvider }","import { useState, createContext, useEffect } from \"react\";\nimport Home from \"./homepage/Home\"\n\nconst UserContext = createContext()\n\nfunction UserProvider({children}){\n  const [user, setUser] = useState()\n \n  // useEffect(()=>{\n  //   fetch(\"/me\")\n  //   .then(r=>r.json())\n  //   .then(data=>{\n  //     console.log(\"user context fired\")\n  //     setUser(data)\n  //   })\n  // },[])\n  \n  return <UserContext.Provider value={[user, setUser]}>{children}</UserContext.Provider>\n}\n\nexport  { UserContext, UserProvider }","import { useState, useContext, useEffect } from \"react\";\nimport { ComplaintTypesContext } from \"./ComplaintTypesInfo\"\n\nfunction EditComplaint({complaintId, complaint, setComplaint, isSuper}){\nconst[notes, setNotes] = useState(\"\")\nconst[type, setType] = useState(complaint.complaint_type)\nconst[typeId, setTypeId] = useState(complaint.complaint_id)\nconst complaintTypes = useContext(ComplaintTypesContext)\n\nuseEffect(()=>{\n  if(isSuper){\n    setNotes(complaint.super_notes)\n  } else {\n    setNotes(complaint.tenant_notes)\n  }\n},[])\n\nlet updatedNote\n\nif(isSuper){\n  updatedNote = {\n    super_notes: notes\n  }\n} else {\n  updatedNote = {\n    complaint_type: type,\n    complaint_id: typeId,\n    tenant_notes: notes\n  }\n}\n\n\n\nconst complaintTypeOptions = complaintTypes.map((type)=><option key={type.id} value={type.id}>{type.complaint_type}</option>)\n\nfunction handleSelect(e){\n  if(e.target.value!==0){\n    setTypeId(e.target.value)\n    const complaintType = complaintTypes.find((type)=>type.id===parseInt(e.target.value))\n    setType(complaintType.complaint_type)\n  }\n}\nfunction handleSubmit(e){\n \n  e.preventDefault()\n  fetch(`/tenant_complaints/${complaintId}`,{\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\" : \"application/json\",\n    },\n    body: JSON.stringify(updatedNote)\n  })\n  .then(r=>r.json())\n  .then((data)=>{\n    setComplaint(data);\n  })\n  \n}\n\n  return(\n    <div>\n      <form onSubmit={handleSubmit}>\n        {isSuper ?\n        \"\" :\n        <div id=\"select-type\">\n          <select onChange={handleSelect}>\n            <option value={0}>Select Type</option>\n            {complaintTypeOptions}\n          </select>\n        </div>}\n        <input placeholder=\"Enter notes\" onChange={(e)=>setNotes(e.target.value)} value={notes}>\n        </input>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default EditComplaint;","// import { format } from 'date-fns'\nimport { useContext, useState, useEffect } from \"react\";\nimport { ComplaintTypesContext } from \"../ComplaintTypesInfo\";\nimport { BuildingsContext } from \"../BuildingsInfo\";\nimport { TenantComplaintContext } from \"../TenantComplaintsContext\";\nimport { UserContext } from \"../UserContext\"\nimport EditComplaint from \"../EditComplaint\";\nimport Errors from \"../Errors\"\n\n\nfunction ComplaintCard({tenantComplaint}){\n  // console.log(tenantComplaint)\n  const createdAt = new Date(tenantComplaint.created_at)\n  const updatedAt = new Date(tenantComplaint.updated_at)\n  const now = new Date()\n  const timeLapsed = Math.floor(Math.abs(now - createdAt)/(1000 * 60 * 60 * 24))\n  \n  const[editWindowOn, setEditWindowOn] = useState(false)\n  const[complaint, setComplaint] = useState(tenantComplaint)\n  const[errors, setErrors] = useState([])\n  const[isSuper, setIsSuper] = useState(false)\n  const[compStatus, setCompStatus] = useState()\n  \n  const complaintTypes = useContext(ComplaintTypesContext)\n  const [complaints, setComplaints] = useContext(TenantComplaintContext)\n  const buildings = useContext(BuildingsContext)\n  const [user] = useContext(UserContext)\n\n  \n  useEffect(()=>{\n    setComplaint(tenantComplaint);\n    // setTypeId(tenantComplaint.complaint_id)\n    if(user && user.buildings){\n      setIsSuper(true)\n    }\n  },[user])\n\n  useEffect(()=>{\n    setCompStatus(tenantComplaint.resolved)\n  },[])\n  \n  let building\n  \n  if(buildings){\n    building = buildings.find(building=>building.id===tenantComplaint.building_id)\n  }\n\n  let complaintType\n  \n  if(complaint){\n \n    complaintType = complaintTypes.find(c=>c.id===tenantComplaint.complaint_id)\n\n  }\n\n  \n  function handleClick(){\n    setErrors([])\n    if(!user){\n      setErrors([\"You must be logged in to edit/update/delete complaints.\"]);\n    } else {\n      setEditWindowOn(!editWindowOn)\n    }\n  }\n    \n\n  function handleDelete(){\n    if(!user){\n      setErrors([\"You must be logged in to edit/update/delete complaints.\"]);\n    } else{\n      if(isSuper){\n        setErrors([\"Only a tenant can delete a complaint.\"])\n      } else {\n        const deleteConfirm = window.confirm(\"Are you sure you want to delete this complaint? You CANNOT undo this action. 'OK' to confirm, or CANCEL.\")\n        if(deleteConfirm){\n          fetch(`/tenant_complaints/${tenantComplaint.id}`,{\n          method: \"DELETE\"\n          })\n          .then((r)=>{\n            if(r.ok){\n             \n              const filteredComplaints = complaints.filter((comp)=>comp.id!==(parseInt(complaint.id)));\n              setComplaints(filteredComplaints)\n            } else {\n                r.json().then((err)=> setErrors(err.errors))\n              }\n              \n          })\n        }\n      }\n    }\n  }  \n \n\n  if(tenantComplaint!==undefined){\n    return(\n      <div id=\"complaint-card\">\n        <h3>{complaint.complaint_type}</h3>\n        {building ? <h4>{building.address}</h4>: \"\" }\n        <div>Unit #: {complaint.unit}</div>\n        <div>Tenant notes: {complaint.tenant_notes}</div>\n        <div>Super notes: {complaint.super_notes}</div>\n        <div>Opened: {createdAt.toString()}</div>\n        <div>Updated: {updatedAt.toString()}</div>\n        <div id={compStatus ? \"\" : \"open\"}>{compStatus ? \"Closed\" : \"Open\"}</div>\n        {compStatus ? \"\" : <div>This complaint has been open for {timeLapsed} days.</div>}\n        <div>\n          <button onClick={handleClick}>{editWindowOn ? \"Close\" : \"Edit Complaint/Add Note\"}</button>\n          <button onClick={handleDelete}>Delete Complaint</button>\n        </div>\n        <div id=\"edit-window\">\n          {editWindowOn ? <EditComplaint complaintId={tenantComplaint.id} complaint={complaint} setComplaint={setComplaint} setComplaints={setComplaints} isSuper={isSuper} setIsSuper={setIsSuper}/> : \"\"}\n        </div>\n        <div>\n          <Errors errors={errors}/>\n        </div>\n      </div>\n    )\n  } \n}\n\nexport default ComplaintCard","\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { useState, useContext, useEffect } from \"react\";\nimport { BuildingsContext } from '../BuildingsInfo';\n\n//import buildings info\n//set each building as an object as below\n//the buildings info is static, but the number of complaints is updated\n//latitude and longitude becomes part of the building info\n\n\nconst MapContainer = () => {\n  const buildings = useContext(BuildingsContext)\n  \n  console.log(buildings)\n\n  \n  const[ selected, setSelected ] = useState({})\n  const[ locations, setLocations ] = useState([])\n  \n  useEffect(()=>{\n    if(buildings){\n      let buildingStats = []\n      buildings.map((building)=>{\n        const location = {\n          lng: building.longitude,\n          lat: building.latitude\n        }\n        const name = building.address\n        const unitCount = building.number_of_units\n        const complaintCount = building.tenant_complaints.length\n        buildingStats.push({name, location, unitCount, complaintCount})\n      })\n      setLocations(buildingStats)\n    }\n  },[buildings])\n \n  function onSelect(item){\n    setSelected(item)\n  }\n\n  const mapStyles = {        \n    height: \"100vh\",\n    width: \"100%\"};\n  \n  const defaultCenter = {\n    lat: 40.7812, lng: -73.9665\n  }\n  \n  return (\n     <LoadScript\n       googleMapsApiKey='AIzaSyCm4gB5LX1PXFyaXst7ryFqQjgBJk_a1HU'>\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={13}\n          center={defaultCenter}>\n            {\n            locations.map(building=>{\n              console.log(building)\n              return(\n                <Marker key={building.id} position={building.location} onClick={()=>onSelect(building)}/>\n              )\n            })\n            }{\n              selected.location &&\n              (\n                <InfoWindow\n                position={selected.location}\n                clickable={true}\n                onCloseClick={() => setSelected({})}\n                >\n                  <div>\n                    <ul>\n                    <h3>{selected.name}</h3>\n                    <li>{selected.unitCount} units in buildling</li>\n                    <li>{selected.complaintCount} complaints filed</li>\n                    </ul>\n                   \n                  </div>\n               \n                </InfoWindow>\n              )\n            }\n        </GoogleMap>\n     </LoadScript>\n  )\n}\n\nexport default MapContainer;","import { useState, useEffect, useContext} from \"react\";\nimport ComplaintCard from \"./Cards/ComplaintCard\";\nimport { BuildingsContext } from \"./BuildingsInfo\";\n// import { Wrapper, Status } from \"@googlemaps/react-wrapper\"\nimport MapContainer from \"./map/MapContainer\"\nimport Loading from \"./map/Loading\"\nimport MapError from \"./map/MapError\";\n\nfunction ComplaintsByBuilding(){\n\n  const buildings = useContext(BuildingsContext)\n  \n  const[tenantComplaints, setTenantComplaints] = useState([])\n  const[complaintTypes, setComplaintTypes] = useState([])\n  const[noComplaints, setNoComplaints] = useState(false)\n\n  //google map stuff\n\n  // const render = (status) =>{\n  //   switch (status) {\n  //     case Status.LOADING:\n  //       return <Loading/>\n  //     case Status.FAILURE:\n  //       return <MapError />;\n  //   case Status.SUCCESS:\n  //       return <MapContainer />;\n  //   }\n  // }\n\n  //google map stuff ^^^\n  \n  useEffect(()=>{\n    fetch(\"./complaints\")\n      .then(r=>r.json())\n      .then(data=>setComplaintTypes(data))\n  },[])\n\n  function handleBuildingSelect(e){\n   \n    if(parseInt(e.target.value)===0){\n      setNoComplaints(false)\n    } else {\n        const building = buildings.find(b=>b.id === parseInt(e.target.value))\n        setTenantComplaints(building.tenant_complaints)\n        if(building.tenant_complaints.length===0){\n          setNoComplaints(true)\n        } else {\n          setNoComplaints(false)\n        }\n    }\n  }\n\n  const buildingList = buildings.map((building)=><option key={building.id} value={building.id}>{building.address}</option>)\n\n  return(\n    <div>\n       <div>\n        <select onChange={handleBuildingSelect}>\n          <option value={0}>Select Building to View All Complaints</option>\n          {buildingList}\n        </select>\n      </div>\n      <div>\n      {/* <Wrapper apiKey={\"AIzaSyCGFi2GNqNUB8GDRpxe_bD3ikaXm9qqmHc\"} render={render}> */}\n        <MapContainer/>\n      {/* </Wrapper> */}\n        \n      </div>\n      <div id=\"building-complaints-window\">\n      {tenantComplaints.map((tenantComplaint)=><ComplaintCard tenantComplaint={tenantComplaint} complaintTypes={complaintTypes} key={tenantComplaint.id}/>)}\n      </div>\n      <div>\n        {noComplaints ? \"No complaints in this Building.\" : \"\"}\n      </div>\n    </div>\n   \n  )\n  \n}\n\nexport default ComplaintsByBuilding","import { useContext } from \"react\";\nimport { UserContext } from \"../UserContext\"\n\nfunction TenantCard(){\n  const [user] = useContext(UserContext)\n  const {first_name, last_name, email, phone_number, building, apartment, additional_tenants} = user\n  return(\n    <div>\n      <h4>Tenant Information:</h4>\n      <p>{user.first_name} {user.last_name}</p>\n      <p>{user.email}, {user.phone_number}</p>\n      {/* <p>{user.building.address} {user.apartment.unit_number}, New York, NY</p> */}\n      <p>Additional tenants: {user.additional_tenants}</p>\n    </div>\n  )\n}\n\nexport default TenantCard;","import { useContext } from \"react\";\nimport { UserContext } from \"../UserContext\"\n\nfunction SuperCard(){\n  const [user] = useContext(UserContext)\n  console.log(user)\n  let buildingList\n\n  if(user.buildings){\n    buildingList = user.buildings.map((b)=>{\n    let isPlural\n    if(b.tenant_complaints.length===1){\n      isPlural = false\n    } else {\n      isPlural = true\n    }\n    \n    return <li key={b.id}>{b.address}, {b.tenant_complaints.length} {isPlural ? \"complaints\" : \"complaint\"}</li>\n  })\n  }\n\n  return (\n    <div>\n      <h4>Super Information:</h4>\n      <p>{user.first_name} {user.last_name}</p>\n      <p>{user.email}, {user.phone_number}</p>\n      <p>Your buildings:</p>\n      <ul>\n        {buildingList}\n      </ul>\n      \n    </div>\n  )\n}\n\nexport default SuperCard;","import {Routes, Route, NavLink} from \"react-router-dom\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { UserContext, } from \"../UserContext\";\n\nfunction TenantNavbar(){\n  const [user] = useContext(UserContext)\n   \n  // useEffect(()=>{\n  //   if(user && user.building){\n  //     setComplaints(user.building.tenant_complaints)\n  //   }\n  // },[user])\n\n  return(\n    <div>\n      <div id=\"navbar\">\n        <NavLink to=\"/buildingcomplaints\">View All Complaints in Building</NavLink>\n        <NavLink to=\"/mycomplaints\">View Complaints for Your Unit</NavLink>\n        <NavLink to=\"/filecomplaints\">File New Complaint</NavLink>\n      </div>\n    </div>\n  )\n}\n\nexport default TenantNavbar;","import { useState, useEffect, useContext } from \"react\";\nimport { BuildingsContext } from \"../BuildingsInfo\"\nimport ComplaintCard from \"../Cards/ComplaintCard\"\nimport { UserContext } from \"../UserContext\"\n\nfunction SuperComplaintsByBuilding(){\n  const[building, setBuilding] = useState()\n  const [user] = useContext(UserContext)\n  const superBuildings = user.buildings\n\n  let buildingOptions\n  if(superBuildings){\n    buildingOptions = superBuildings.map((building)=><option key={building.id} value={building.id}>{building.address}</option>)\n\n  }\n \n  function handleSelect(e){\n    const selectedBuilding = superBuildings.find((building)=>building.id===parseInt(e.target.value))\n    setBuilding(selectedBuilding);\n  }\n\n  let complaintList = \"\"\n\n  if(building && building.tenant_complaints.length!==0){\n    complaintList = building.tenant_complaints.map((complaint)=><ComplaintCard key = {complaint.id}tenantComplaint={complaint}/>)\n  } else if (building && building.tenant_complaints.length===0){\n    complaintList = \"No complaints in this building.\"\n  } \n  \n  return(\n    <div>\n      <select onChange={handleSelect}>\n        <option>Select Building</option>\n        {buildingOptions}\n      </select>\n      <div>\n        {complaintList}\n      </div>\n    </div>\n  )\n}\n\n\nexport default SuperComplaintsByBuilding;","import { useEffect, useState, useContext } from \"react\";\nimport { ComplaintTypesContext } from \"../ComplaintTypesInfo\"\nimport ComplaintCard from \"../Cards/ComplaintCard\";\nimport { UserContext } from \"../UserContext\";\nimport { TenantComplaintContext } from \"../TenantComplaintsContext\"\n\nfunction AllSuperComplaints(){\n  const [user] = useContext(UserContext)\n  const [complaints, setComplaints] = useContext(TenantComplaintContext)\n  const types = useContext(ComplaintTypesContext)\n\n  const [typeId, setTypeId] = useState()\n  const [openOnly, setOpenOnly] = useState(false)\n  const [buildings, setBuildings] = useState([])\n  const [allSuperComplaints, setAllSuperComplaints] = useState([])\n  \n  useEffect(()=>{\n    setAllSuperComplaints(complaints)\n  },[complaints])\n\n  useEffect(()=>{\n    if(user && user.buildings){\n      setBuildings(user.buildings)\n    }\n  },[user])\n  \n  useEffect(()=>{\n    if(openOnly===true){\n      const open = complaints.filter((complaint)=>complaint.resolved===false)\n      console.log(open)\n      setAllSuperComplaints(open)\n    } else {\n      setAllSuperComplaints(complaints)\n    }\n  },[openOnly])\n\n  useEffect(()=>{\n    if(buildings!==[]){\n      const superComplaints = buildings.map((building)=>building.tenant_complaints);\n      setComplaints(superComplaints.flat());\n    }\n  },[buildings])\n  \n  let complaintList\n\n  if(complaints){\n    let filteredComplaints = allSuperComplaints\n    if(typeId){\n      filteredComplaints = allSuperComplaints.filter((complaint)=>complaint.complaint_id===parseInt(typeId))\n    }\n    complaintList = filteredComplaints.map((complaint)=><ComplaintCard tenantComplaint={complaint} key={complaint.id}/>)\n  }\n\n  function selectType(e){\n    setTypeId(parseInt(e.target.value))\n  }\n\n  const complaintTypesOptions = types.map((type)=><option key = {type.id} value={type.id}>{type.complaint_type}</option>)\n  return(\n    <div>\n      <div>\n      <label>Filter by Complaint Type: </label>\n      <select onChange={selectType} name=\"type\">\n        <option>Select</option>\n        {complaintTypesOptions}\n      </select>\n      </div>\n      <div>\n      <label >Show open complaints only</label>\n      <input type=\"checkbox\" name=\"open/close\" onChange={()=>setOpenOnly(!openOnly)}/>\n      </div>\n      {complaintList}\n    </div>\n  )\n}\n\n\nexport default AllSuperComplaints;\n// function getComplaintInfo(e){\n      \n//   setBuildingComplaints(buildings.find((b)=>b.id===parseInt(e.target.value)).tenant_complaints);\n// }\n// buildingComplaintInfo = buildingComplaints.map((complaint)=>{\n//   return <ComplaintCard tenantComplaint={complaint}/>\n// })","import { useState, useEffect, useContext } from \"react\";\nimport ComplaintCard from \"../Cards/ComplaintCard\";\nimport { TenantComplaintContext } from \"../TenantComplaintsContext\"\n\nfunction ComplaintsByDate(){\n  const[complaints, setComplaints] = useContext(TenantComplaintContext)\n  const[filter, setFilter] = useState(\"/by-date\")\n  console.log(complaints)\n\n  // useEffect(()=>{\n  //   fetch(filter)\n  //   .then(r=>r.json())\n  //   .then((data)=>{\n  //     setComplaints(data);\n  //   })\n  // },[filter])\n\n  function filterComplaints(e){\n    console.log(e.target.value)\n  }\n  \n  let complaintList\n\n  if(complaints){\n    complaintList = complaints.map((complaint)=><ComplaintCard key={complaint.id} tenantComplaint={complaint}/>)\n  }\n  \n  return(\n    \n    <div>\n      <div>\n        <select onChange={filterComplaints}>\n          <option value = {\"/by-date\"}>All Complaints</option>\n          <option value = {\"/open-complaints\"}>Open Complaints</option>\n          <option value = {\"/closed-complaints\"}>Closed Complaints</option>\n        </select>\n      </div>\n      {complaintList}\n    </div>\n  )\n}\n\n\nexport default ComplaintsByDate;","import { Routes, Route, NavLink } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport SuperComplaintsByBuilding from \"../super/SuperComplaintsByBuilding\";\nimport AllSuperComplaints from \"../super/AllSuperComplaints\";\nimport ComplaintsByDate from \"../super/ComplaintsByDate\";\nimport { UserContext, } from \"../UserContext\";\nimport { useState } from \"react\";\n\n\nfunction SuperNavbar(){\n  \n  const [complaints, setComplaints] = useState([])\n  \n  \n  return(\n    <div>\n      <div id=\"navbar\">\n        <NavLink to=\"/allcomplaints\" className=\"navlink\">View All Complaints</NavLink>\n        <NavLink to=\"/super/complaintsbybuilding\" className=\"navlink\">By Building</NavLink>\n      </div>\n      <Routes>\n        \n      </Routes>\n    </div>\n  )\n}\n\nexport default SuperNavbar;","import { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../UserContext\"\nimport ComplaintCard from \"../Cards/ComplaintCard\"\nimport { TenantComplaintContext} from \"../TenantComplaintsContext\"\n\nfunction BuildingComplaints(){\n  \n  const [user] = useContext(UserContext)\n  const [complaints, setComplaints ]= useContext(TenantComplaintContext)\n  console.log(complaints)\n  // const [buildingComplaints, setBuildingComplaints] = useState([])\n  \n  // useEffect(()=>{\n  //   console.log(user)\n  //   if(user && user.building){\n  //     setComplaints(user.building.tenant_complaints)\n  //   }\n      \n  // },[user])\n\n  // useEffect(()=>{\n  //   setBuildingComplaints(complaints)\n  // },[complaints])\n\n\n  let tenantBuildingComplaints \n\n  if(complaints){\n    tenantBuildingComplaints = complaints.map((complaint)=><ComplaintCard key={complaint.id} tenantComplaint={complaint} complaints={complaints} setComplaints={setComplaints}/>)\n  }\n\n  return(\n    <div>\n      {tenantBuildingComplaints}\n    </div>\n  )\n}\n\nexport default BuildingComplaints;","import { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport ComplaintCard from \"../Cards/ComplaintCard\";\n\nfunction MyComplaints({complaints, setComplaints}){\n  const[myComplaints, setMyComplaints] = useState([])\n\n  const [user] = useContext(UserContext)\n  console.log(user)\n  useEffect(()=>{\n    if(user && user.apartment){\n      const filteredComplaints = complaints.filter((complaint)=>complaint.tenant_id===user.id)\n      setMyComplaints(filteredComplaints)\n    }\n  },[user])\n  \n  let myComplaintList\n\n  if(user && user.apartment){\n    console.log(complaints)\n    myComplaintList = myComplaints.map((complaint)=>{\n      return <ComplaintCard tenantComplaint={complaint} key={complaint.id} setComplaints={setComplaints} complaints={complaints}/>\n    })\n  }\n\n  return(\n    <div>\n      {myComplaintList}\n    </div>\n  )\n}\n\nexport default MyComplaints;","import { useState, useContext, useEffect } from \"react\"\nimport { UserContext } from \"../UserContext\"\nimport { TenantComplaintContext } from \"../TenantComplaintsContext\"\nimport { ComplaintTypesContext } from \"../ComplaintTypesInfo\"\nimport Errors from \"../Errors\"\n\nfunction FileComplaint({complaints, setComplaints}){\n  const [user] = useContext(UserContext)\n  // const [complaints, setComplaints] = useContext(TenantComplaintContext)\n  const complaintTypes = useContext(ComplaintTypesContext)\n  const[complaintType, setComplaintType] = useState()\n  const[complaintTypeId, setComplaintTypeId] = useState()\n  const[tenantNotes, setTenantNotes] = useState(\"\")\n  const[submitOn, setSubmitOn] = useState(true)\n  const[errors, setErrors] = useState([])\n  console.log(complaints, setComplaints)\n  useEffect(()=>{\n    if(complaintTypes.length!==0){\n    setComplaintType(complaintTypes[0].complaint_type)\n    setComplaintTypeId(complaintTypes[0].id)}\n  },[complaintTypes])\n\n  const complaintTypeOptions = complaintTypes.map((complaint=><option key={complaint.id} value={[complaint.complaint_type, complaint.id]}>{complaint.complaint_type}</option>))\n\n  function handleSelectType(e){ \n    const compArray = (e.target.value.split(\",\"))\n    setComplaintType(compArray[0])\n    setComplaintTypeId(compArray[1])\n  }\n\n  function handleSubmit(e){\n    e.preventDefault()\n    setSubmitOn(!submitOn)\n    const tenantComplaint ={\n      resolved: false,\n      tenant_notes: tenantNotes,\n      complaint_id: complaintType.id,\n      tenant_id: user.id,\n      building_id: user.building.id,\n      unit: user.apartment.unit_number,\n      complaint_type: complaintType,\n      complaint_id: complaintTypeId\n    }\n\n    fetch('/tenant_complaints',{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n      },\n      body: JSON.stringify(tenantComplaint)\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((data)=>{\n          console.log(data)\n          setComplaints([...complaints, data])\n          setErrors([\"Your complaint has been logged.\"]);\n          \n        })\n      }\n      if (!r.ok) {\n        r.json().then((err) => setErrors(err.errors))\n      }\n\n    })\n  }\n\n  return(\n    <div id=\"complaint-form\">\n      {submitOn ? \n\n      <form onSubmit={handleSubmit}>\n          <div>\n            <label>Select Complaint Type:</label>\n            <select onChange={handleSelectType}>\n              {complaintTypeOptions}\n            </select>\n          </div>\n          <div>\n            <textarea onChange={((e)=>setTenantNotes(e.target.value))}></textarea>\n          </div>\n        <button type=\"submit\">Submit</button>\n    </form>\n      \n      : \"\"}\n        \n    <Errors errors={errors}/>\n    </div>\n  )\n}\n\nexport default FileComplaint;","import { useState, useContext, useEffect } from \"react\";\nimport { NavLink, Routes, Route, useNavigate } from \"react-router-dom\"\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ComplaintsByBuilding from \"../ComplaintsByBuilding\";\nimport TenantCard from \"../Cards/TenantCard\";\nimport SuperCard from \"../Cards/SuperCard\";\nimport { TenantComplaintContext } from \"../TenantComplaintsContext\";\nimport TenantNavbar from \"../navbars/TenantNavbar\";\nimport SuperNavbar from \"../navbars/SuperNavbar\";\nimport { UserContext } from \"../UserContext\";\nimport AllSuperComplaints from \"../super/AllSuperComplaints\";\nimport SuperComplaintsByBuilding from \"../super/SuperComplaintsByBuilding\";\nimport ComplaintsByDate from \"../super/ComplaintsByDate\";\nimport BuildingComplaints from \"../tenant/BuildingComplaints\";\nimport MyComplaints from \"../tenant/MyComplaints\";\nimport FileComplaint from \"../tenant/FileComplaint\";\n\nfunction Home(){\n\nconst [user, setUser] = useContext(UserContext)\nconst [complaints, setComplaints] = useContext(TenantComplaintContext)\nconst [isSuper, setIsSuper] = useState()\n \nconst navigate = useNavigate()\n\n  useEffect(()=>{\n    fetch(\"/me\").then((r)=>{\n      if (r.ok){\n        r.json().then((user)=>{\n          setUser(user);\n        })\n      }\n    })\n  },[])\n\n  useEffect(()=>{\n    if(user && user.apartment){\n      setIsSuper(false)\n    } else if (user && user.buildings){\n      setIsSuper(true)\n    }\n  },[user])\n\n  useEffect(()=>{\n    if(user && user.buildings){\n      const superComplaints = user.buildings.map((building)=>building.tenant_complaints).flat()\n      setComplaints(superComplaints)\n    } else if(user && user.apartment){\n      setComplaints(user.building.tenant_complaints)\n    }\n  },[user])\n\n  useEffect(()=>{\n    if(user && user.buildings){\n      setIsSuper(true)\n    } else {\n      setIsSuper(false)\n    }\n}\n  ,[user])\n  \n\n  function handleLogout(){\n    fetch(\"/logout\", {\n      method: 'DELETE'\n    }).then((r)=>{\n      if (r.ok){\n        setUser(null);\n        navigate(\"/\", {replace : true })\n      }\n    })\n  }\n\n\n  return(\n\n    <div id=\"home\">\n\n      {user \n        ? \n        <div>\n          <p>Welcome, {user.first_name}  \n          <button onClick={handleLogout}>Logout</button>\n          </p>\n          {isSuper ? <SuperCard/> : <TenantCard/>}\n          {user.apartment ? <TenantNavbar/> : <SuperNavbar/>}\n        </div>\n        : \n      <div id=\"login-window\">\n        <div>Existing Tenant/Superintendent? <NavLink to=\"/login\" > Login </NavLink></div>\n        <div>New to METROlog? <NavLink to=\"/register\">Register</NavLink></div>\n        <div>Prospective tenants?<NavLink to=\"/complaintsbybuilding\">Veiw Complaints in All Buildings</NavLink></div>\n      </div>\n      }\n      \n      <Routes>\n        <Route exact path=\"/login\" element={<Login setUser={setUser}/>}/>\n        <Route exact path=\"/register\" element={<Register/>}/>\n        <Route exact path=\"/complaintsbybuilding\" element={<ComplaintsByBuilding/>}/>\n        <Route exact path=\"/homepage/home\" element={<Home/>}/>\n        <Route path=\"/allcomplaints\" element={<AllSuperComplaints complaints={complaints} setComplaints={setComplaints}/>}/>\n        <Route path=\"/super/complaintsbybuilding\" element={<SuperComplaintsByBuilding />}/>\n        \n        <Route path=\"/complaintsbydate\" element={<ComplaintsByDate/>}/>\n        <Route exact path=\"/buildingcomplaints\" element={<BuildingComplaints complaints={complaints} setComplaints={setComplaints}/>}/>\n        <Route exact path=\"/mycomplaints\" element={<MyComplaints complaints={complaints} setComplaints={setComplaints}/>}/>\n        <Route exact path=\"/filecomplaints\" element={<FileComplaint complaints={complaints} setComplaints={setComplaints}/>}/>\n      </Routes>\n     \n    </div>\n  )\n}\n\nexport default Home;\n","\n// import '../App.css';\n\nimport Banner from './Banner';\nimport Home from './homepage/Home';\nimport { BuildingsProvider } from \"./BuildingsInfo\";\nimport { ComplaintTypesProvider } from \"./ComplaintTypesInfo\";\nimport { UserProvider } from \"./UserContext\"\nimport { TenantComplaintProvider } from './TenantComplaintsContext';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n     \n      <Banner/>\n      \n      <div>\n          \n          <TenantComplaintProvider>\n            <UserProvider>\n              <BuildingsProvider>\n                <ComplaintTypesProvider>\n                  <Home/>\n                </ComplaintTypesProvider>\n              </BuildingsProvider>\n            </UserProvider>\n          </TenantComplaintProvider>\n        \n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}